## MiniRAG Enhanced docker-compose using GHCR containers
# Taken from HKUDS LightRAG, LightRAG Server, and MiniRAG
# For more info on those projects see https://github.com/HKUDS

version: '3.8'

services:
  minirag-server:
    image: ghcr.io/joshuarl/minirag-enhanced-minirag:latest
    container_name: minirag-server
    args:
      MINIRAG_VERSION: main
      LIGHTRAG_VERSION: main
    ports:
      - "7861:7861"
    volumes:
      - ./data:/app/MiniRAG/data
      - ./config:/app/MiniRAG/config
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=my_password123
      - POSTGRES_URI=postgresql://postgres:postgres@postgres:5432/lightrag
    networks:
      - minirag-network
    restart: unless-stopped

  minirag-webui:
    image: ghcr.io/joshuarl/minirag-enhanced-webui:latest
    container_name: minirag-webui
    args:
      LIGHTRAG_VERSION: main
    ports:
      - "7070:7070"
    depends_on:
      - minirag-server
    environment:
      - API_URL=http://minirag-server:7861
      - JWT_SECRET=your-secret-key-here
      - TOKEN_EXPIRE_HOURS=4
    networks:
      - minirag-network
    restart: unless-stopped
    
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/my_password123
    volumes:
      - ./neo4j_db/data:/data
      - ./neo4j_db/logs:/logs
      - ./neo4j_db/import:/var/lib/neo4j/import
      - ./neo4j_db/plugins:/plugins
    networks:
      - minirag-network

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lightrag
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - minirag-network

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "15433:15433"
    environment:
      - PGADMIN_DEFAULT_EMAIL=email@name.tld
      - PGADMIN_DEFAULT_PASSWORD={pgadminpwdhere}
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - minirag-network
    volumes:
      - ${PWD}/pgadmin-data/:/var/lib/pgadmin/ # Update the path or this container may fail to build

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_CONTEXT_LENGTH=8192
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - minirag-network
    command: # Update this command for your preferred default models, but remember to change the server .env
      - "-c"
      - "sleep 3; OLLAMA_HOST=ollama:11434 ollama pull llama3.2:1b-instruct-q8_0; OLLAMA_HOST=ollama:11434 ollama pull nomic-embed-text"

networks:
  minirag-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  postgres-data:
  pgadmin-data:
  ollama-data:
